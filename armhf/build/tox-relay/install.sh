#!/bin/ash
#declare build and runtime dependencies here
BUILDDEPS="autoconf libtool gcc automake make musl-dev git libsodium-dev linux-headers openssl"
RUNDEPS="libsodium libconfig-dev dumb-init"

#directory for temporary build files
TEMPDIR="/tmp/tox"

#location of the unifnished tox-bootstrapd config file (that is copied into the image via the Dockerfile)
#this file should not contain the default list of bootstrap "nodes"
#make sure to change the location of this in the Dockerfile as well if you plan on changing this file's location in the container
UNFINISHED_CONFIG="/unfinished_config.conf"


#install dependencies
apk add -U $RUNDEPS $BUILDDEPS

#create tox system user and group
adduser -u 156 -h /home/tox -s /sbin/nologin -D -S tox
addgroup -g 156 -S tox
addgroup tox tox

#download and compile tox
mkdir -p $TEMPDIR && cd $TEMPDIR
wget https://github.com/TokTok/c-toxcore/archive/master.tar.gz
tar -zxf master.tar.gz
rm master.tar.gz

cd $TEMPDIR/toxcore-master
./autogen.sh
#TODO: disable LAN discovery support (it requires kernel headers and isn't needed for the daemon)
./configure --enable-daemon
make -j4

#install files
make install

#splice together a configuration file for the bootstrap daemon using autogenerated IPv4 node list and custom config copied in by running the Dockerfile
#cd $TEMPDIR
#wget https://tox.0x10k.com/bootstrapd-conf-ipv4.txt
#TODO:make this work (for some reason the file isn't appended)
#cat bootstrapd-conf-ipv4.txt >> $UNFINISHED_CONFIG
mv $UNFINISHED_CONFIG /etc/tox-bootstrapd.conf
#cat /etc/tox-bootstrapd.conf

#perform cleanup operations
apk del $BUILDDEPS
rm -rf /var/cache/apk/*
rm -rf $TEMPDIR
